[{"C:\\Users\\Brijesh\\Documents\\GitHub\\Stock-Market-System\\frontend\\src\\index.js":"1","C:\\Users\\Brijesh\\Documents\\GitHub\\Stock-Market-System\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Brijesh\\Documents\\GitHub\\Stock-Market-System\\frontend\\src\\App.js":"3","C:\\Users\\Brijesh\\Documents\\GitHub\\Stock-Market-System\\frontend\\src\\reducers\\index.js":"4","C:\\Users\\Brijesh\\Documents\\GitHub\\Stock-Market-System\\frontend\\src\\components\\Auth\\Auth.js":"5","C:\\Users\\Brijesh\\Documents\\GitHub\\Stock-Market-System\\frontend\\src\\components\\Navbar\\Navbar.js":"6","C:\\Users\\Brijesh\\Documents\\GitHub\\Stock-Market-System\\frontend\\src\\components\\Home\\Home.js":"7","C:\\Users\\Brijesh\\Documents\\GitHub\\Stock-Market-System\\frontend\\src\\reducers\\auth.js":"8","C:\\Users\\Brijesh\\Documents\\GitHub\\Stock-Market-System\\frontend\\src\\components\\Auth\\icon.js":"9","C:\\Users\\Brijesh\\Documents\\GitHub\\Stock-Market-System\\frontend\\src\\components\\Auth\\Input.js":"10","C:\\Users\\Brijesh\\Documents\\GitHub\\Stock-Market-System\\frontend\\src\\components\\Auth\\styles.js":"11","C:\\Users\\Brijesh\\Documents\\GitHub\\Stock-Market-System\\frontend\\src\\components\\Navbar\\styles.js":"12","C:\\Users\\Brijesh\\Documents\\GitHub\\Stock-Market-System\\frontend\\src\\api\\index.js":"13","C:\\Users\\Brijesh\\Documents\\GitHub\\Stock-Market-System\\frontend\\src\\actions\\types.js":"14","C:\\Users\\Brijesh\\Documents\\GitHub\\Stock-Market-System\\frontend\\src\\actions\\auth.js":"15","C:\\Users\\Brijesh\\Documents\\GitHub\\Stock-Market-System\\frontend\\src\\components\\Datatable\\Datatable.js":"16","C:\\Users\\Brijesh\\Documents\\GitHub\\Stock-Market-System\\frontend\\src\\components\\View\\View.js":"17"},{"size":792,"mtime":1612273037360,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":4435,"mtime":1614486295742,"results":"21","hashOfConfig":"19"},{"size":126,"mtime":1612286394088,"results":"22","hashOfConfig":"19"},{"size":4570,"mtime":1613301824206,"results":"23","hashOfConfig":"19"},{"size":2316,"mtime":1613812922496,"results":"24","hashOfConfig":"19"},{"size":8096,"mtime":1614486729111,"results":"25","hashOfConfig":"19"},{"size":582,"mtime":1612271284797,"results":"26","hashOfConfig":"19"},{"size":502,"mtime":1612287674931,"results":"27","hashOfConfig":"19"},{"size":907,"mtime":1612287741117,"results":"28","hashOfConfig":"19"},{"size":638,"mtime":1612287689887,"results":"29","hashOfConfig":"19"},{"size":911,"mtime":1613812383283,"results":"30","hashOfConfig":"19"},{"size":1020,"mtime":1614490619968,"results":"31","hashOfConfig":"19"},{"size":171,"mtime":1613813031766,"results":"32","hashOfConfig":"19"},{"size":612,"mtime":1612271124903,"results":"33","hashOfConfig":"19"},{"size":21907,"mtime":1614258342341,"results":"34","hashOfConfig":"19"},{"size":5188,"mtime":1614498677449,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"zpk8ge",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Brijesh\\Documents\\GitHub\\Stock-Market-System\\frontend\\src\\index.js",[],["76","77"],"C:\\Users\\Brijesh\\Documents\\GitHub\\Stock-Market-System\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Brijesh\\Documents\\GitHub\\Stock-Market-System\\frontend\\src\\App.js",["78","79"],"/*import './App.css';\nimport Home from './cmp/Home';\nimport Auth from './cmp/Auth';\nimport About from './cmp/About';\nimport Protected from './cmp/Protected';\nimport Nav from './cmp/Nav';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <Router>\n        <Nav />\n        {/* <Link to=\"auth\" > Home </Link> *//*}\n<Switch>\n<Route path=\"/about\">\n{/* <About /> *//*}\n<Protected cmp={About} />\n</Route>\n<Route path=\"/home\">\n{/* <Home /> *//*}\n<Protected cmp={Home} />\n</Route>\n<Route path=\"/\">\n<Auth />\n</Route>\n</Switch>\n</Router>\n</div>\n);\n}\n\nexport default App;\n*/\n\n/*\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Home from \"./components/Home\";\nimport Profile from \"./components/Profile\";\n\nimport { logout } from \"./actions/auth\";\nimport { clearMessage } from \"./actions/message\";\n\nimport { history } from \"./helpers/history\";\n\nconst App = () => {\n\n  const { user: currentUser } = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    history.listen((location) => {\n      dispatch(clearMessage()); // clear message when changing location\n    });\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (currentUser) {\n    }\n  }, [currentUser]);\n\n  const logOut = () => {\n    dispatch(logout());\n  };\n\n  return (\n    <Router history={history}>\n      <div>\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n          <Link to={\"/\"} className=\"navbar-brand\">\n            bezKoder\n          </Link>\n          <div className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/home\"} className=\"nav-link\">\n                Home\n              </Link>\n            </li>\n\n            {currentUser && (\n              <li className=\"nav-item\">\n                <Link to={\"/user\"} className=\"nav-link\">\n                  User\n                </Link>\n              </li>\n            )}\n          </div>\n\n          {currentUser ? (\n            <div className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/profile\"} className=\"nav-link\">\n                  {currentUser.name}\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <a href=\"/login\" className=\"nav-link\" onClick={logOut}>\n                  LogOut\n                </a>\n              </li>\n            </div>\n          ) : (\n              <div className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item\">\n                  <Link to={\"/login\"} className=\"nav-link\">\n                    Login\n                </Link>\n                </li>\n\n                <li className=\"nav-item\">\n                  <Link to={\"/register\"} className=\"nav-link\">\n                    Sign Up\n                </Link>\n                </li>\n              </div>\n            )}\n        </nav>\n\n        <div className=\"container mt-3\">\n          <Switch>\n            <Route exact path={[\"/\", \"/home\"]} component={Home} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/profile\" component={Profile} />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n*/\n\n\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { Container } from '@material-ui/core';\n\nimport Home from './components/Home/Home';\nimport Navbar from './components/Navbar/Navbar';\nimport Auth from './components/Auth/Auth';\nimport View from './components/View/View';\n//import { createRequire } from 'module';\n//const require = createRequire(import.meta.url);\nrequire('dotenv').config();\n\nconst App = () => (\n\n  <BrowserRouter>\n    <Container maxWidth=\"lg\">\n      <Navbar />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/auth\" exact component={Auth} />\n        <Route path=\"/view/:symbol\" exact component={View} />\n      </Switch>\n    </Container>\n  </BrowserRouter>\n);\n\nexport default App;","C:\\Users\\Brijesh\\Documents\\GitHub\\Stock-Market-System\\frontend\\src\\reducers\\index.js",[],"C:\\Users\\Brijesh\\Documents\\GitHub\\Stock-Market-System\\frontend\\src\\components\\Auth\\Auth.js",[],"C:\\Users\\Brijesh\\Documents\\GitHub\\Stock-Market-System\\frontend\\src\\components\\Navbar\\Navbar.js",["80"],"import React, { useState, useEffect } from 'react';\r\nimport { AppBar, Typography, Toolbar, Avatar, Button } from '@material-ui/core';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport decode from 'jwt-decode';\r\n\r\nimport memories from '../../images/2.jpg';\r\nimport * as actionType from '../../actions/types';\r\nimport useStyles from './styles';\r\n\r\nconst Navbar = () => {\r\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n    const dispatch = useDispatch();\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n\r\n    const logout = () => {\r\n        dispatch({ type: actionType.LOGOUT });\r\n\r\n        history.push('/auth');\r\n\r\n        setUser(null);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const token = user?.token;\r\n\r\n        if (token) {\r\n            const decodedToken = decode(token);\r\n\r\n            if (decodedToken.exp * 1000 < new Date().getTime()) logout();\r\n        }\r\n\r\n        setUser(JSON.parse(localStorage.getItem('profile')));\r\n    }, [location]);\r\n\r\n    return (\r\n        <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\r\n            <div className={classes.brandContainer}>\r\n                <Typography component={Link} to=\"/\" className={classes.heading} variant=\"h3\" align=\"center\">StockWatch</Typography>\r\n                <img className={classes.image} src={memories} alt=\"icon\" height=\"90\" />\r\n            </div>\r\n            <Toolbar className={classes.toolbar}>\r\n                {user?.result ? (\r\n                    <div className={classes.profile}>\r\n                        <Avatar className={classes.purple} alt={user?.result.name} src={user?.result.imageUrl}>{user?.result.name.charAt(0)}</Avatar>\r\n                        <Typography className={classes.userName} variant=\"h6\">{user?.result.name}</Typography>\r\n                        <Button variant=\"contained\" className={classes.logout} color=\"secondary\" onClick={logout}>Logout</Button>\r\n                    </div>\r\n                ) : (\r\n                        <Button component={Link} to=\"/auth\" variant=\"contained\" color=\"primary\">Sign In</Button>\r\n                    )}\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","C:\\Users\\Brijesh\\Documents\\GitHub\\Stock-Market-System\\frontend\\src\\components\\Home\\Home.js",["81","82","83","84","85","86","87","88","89","90"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport * as api from '../../api/index.js';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Button, Grid, Typography, Container, TextField } from '@material-ui/core';\r\n//import Datatable from '../Datatable/Datatable.js';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Box from '@material-ui/core/Box';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Alpaca from '@alpacahq/alpaca-trade-api';\r\nimport { AlpacaClient, AlpacaStream } from '@master-chief/alpaca'\r\nconst API_KEY = 'PK3FXI9WQ3EZ3F70F0C1';\r\nconst API_SECRET = 'oKItsTlpvrE75tNhQI1mqXulcpGj68FceNqwc435';\r\nconst USE_POLYGON = false;\r\nrequire(\"es6-promise\").polyfill();\r\nrequire(\"isomorphic-fetch\");\r\n\r\nvar whynotcount = [];\r\n\r\nconst Home = () => {\r\n    const [info, setInfo] = useState([])\r\n    const [list, setList] = useState([])\r\n    const [option, setOption] = useState([])\r\n    const [disable, setDisable] = useState(false)\r\n    const [q, setQ] = useState({ symbol: \"A\", name: \"Agilent Technologies Inc\" })\r\n    var data2 = new Set();\r\n    var interval;\r\n    const client = new AlpacaClient({\r\n        credentials: {\r\n            key: API_KEY,\r\n            secret: API_SECRET,\r\n            // access_token: 'xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx',\r\n            paper: true,\r\n        },\r\n        rate_limit: true,\r\n    })\r\n    async function getList() {\r\n        try {\r\n            const { data } = await api.getWatchlist();\r\n            console.log(data);\r\n            setList(data);\r\n            whynotcount = data;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    async function updating(symbol) {\r\n        try {\r\n            const { data } = await api.updateWatchlist({ symbol });\r\n            //console.log(data);\r\n            //getList();\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    /*useEffect(() => {\r\n        var dummy = [];\r\n        for (var i in list) {\r\n            for (var j in info) {\r\n                if (list[i] === info[j].symbol) {\r\n                    dummy.push({ symbol: info[j].symbol, name: info[j].name, price: \"\" });\r\n                }\r\n            }\r\n        }\r\n        console.log(dummy);\r\n        setFinal(dummy);\r\n    }, [list])*/\r\n\r\n\r\n    /*useEffect(() => {\r\n        interval = setInterval(() => {\r\n            for (var i in final) {\r\n                alpaca.lastTrade(final[i].symbol).then((response) => {\r\n                    console.log(response);\r\n                    setFinal(final.map(item => item.symbol == final[i].symbol ? { ...item, price: response.last.price } : item));\r\n                })\r\n            }\r\n        }, 5000);\r\n    }, [final])*/\r\n\r\n    async function getPrice() {\r\n        try {\r\n            var pricess = [];\r\n            for (var i in whynotcount) {\r\n                var res = await client.getLastTrade({ symbol: whynotcount[i].symbol });\r\n                pricess.push({ symbol: whynotcount[i].symbol, name: whynotcount[i].name, price: res.last.price });\r\n            }\r\n            console.log(pricess);\r\n            setList(pricess);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch(\"http://localhost:5000/stock\")\r\n            .then((response) => { return response.json(); })\r\n            .then((data) => {\r\n                setInfo(data);\r\n                console.log(data);\r\n                setOption(data.map(({ name, symbol }) => ({ name: name, value: symbol })));\r\n                getList().then(() => {\r\n                    interval = setInterval(() => {\r\n                        getPrice();\r\n                    }, 3000);\r\n                }).catch(() => {\r\n                    console.log(\"sometimes it happens\");\r\n                });\r\n\r\n            });\r\n        return () => { clearInterval(interval); };\r\n    }, [])\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        await updating(q.symbol);\r\n        await getList();\r\n        if (list.length == 4) {\r\n            setDisable(true);\r\n        }\r\n    };\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n            minWidth: 275,\r\n        },\r\n        bullet: {\r\n            display: 'inline-block',\r\n            margin: '0 2px',\r\n            transform: 'scale(0.8)',\r\n        },\r\n        title: {\r\n            fontSize: 14,\r\n        },\r\n        pos: {\r\n            marginBottom: 8,\r\n        },\r\n        button: {\r\n            marginRight: 3,\r\n            align: `right`,\r\n        },\r\n        avatar: {\r\n            backgroundColor: 'red',\r\n        },\r\n    });\r\n\r\n    const classes = useStyles();\r\n    //const bull = <span className={classes.bullet}>•</span>;\r\n\r\n    async function handleClick(symbol, e) {\r\n        e.preventDefault();\r\n        try {\r\n            const { data } = await api.updateWatchlist({ symbol });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        await getList();\r\n        if (list.length == 5) {\r\n            setDisable(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\" >\r\n            <form onSubmit={handleSubmit}>\r\n                <Grid container spacing={4} justify=\"center\" alignItems=\"center\">\r\n                    <Grid item xs>\r\n                        <Autocomplete\r\n                            id=\"combo-box-demo\"\r\n                            options={info}\r\n                            getOptionLabel={(option) => option.symbol + \" - \" + option.name}\r\n                            style={{ width: 600 }}\r\n                            autoComplete\r\n                            value={q}\r\n                            onChange={(event, newValue) => {\r\n                                setQ(newValue);\r\n                            }}\r\n                            renderInput={(params) => <TextField {...params} label=\"search stocks\" variant=\"outlined\" />}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                        <Button disabled={disable} variant=\"contained\" type=\"submit\" color=\"secondary\" size=\"large\" style={{ width: 260 }}>Add to Watchlist</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n            <hr />\r\n            {list.map((row, index) =>\r\n                <Box mb={1}>\r\n                    <Card className={classes.root} variant=\"outlined\">\r\n                        <CardHeader\r\n                            avatar={\r\n                                <Typography>\r\n                                    {row.symbol}\r\n                                </Typography>\r\n                            }\r\n                            action={\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                    className={classes.button}\r\n                                    startIcon={<DeleteIcon />}\r\n                                    onClick={(e) => handleClick(row.symbol, e)}\r\n                                >\r\n                                    Delete\r\n                                </Button>\r\n                            }\r\n                        />\r\n                        <CardContent>\r\n                            <Typography variant=\"h6\" component=\"h6\">\r\n                                {row.name}\r\n                            </Typography>\r\n                            <Typography variant=\"h6\" component=\"h6\" key={index}>\r\n                                {row.price}\r\n                            </Typography>\r\n                        </CardContent>\r\n                        <Link to={{ pathname: `/view/${row.symbol}`, stste: { symbol: row.symbol, name: row.name } }} >View</Link>\r\n                    </Card>\r\n                </Box>\r\n            )}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\Brijesh\\Documents\\GitHub\\Stock-Market-System\\frontend\\src\\reducers\\auth.js",[],"C:\\Users\\Brijesh\\Documents\\GitHub\\Stock-Market-System\\frontend\\src\\components\\Auth\\icon.js",[],"C:\\Users\\Brijesh\\Documents\\GitHub\\Stock-Market-System\\frontend\\src\\components\\Auth\\Input.js",[],"C:\\Users\\Brijesh\\Documents\\GitHub\\Stock-Market-System\\frontend\\src\\components\\Auth\\styles.js",[],"C:\\Users\\Brijesh\\Documents\\GitHub\\Stock-Market-System\\frontend\\src\\components\\Navbar\\styles.js",[],"C:\\Users\\Brijesh\\Documents\\GitHub\\Stock-Market-System\\frontend\\src\\api\\index.js",[],"C:\\Users\\Brijesh\\Documents\\GitHub\\Stock-Market-System\\frontend\\src\\actions\\types.js",[],"C:\\Users\\Brijesh\\Documents\\GitHub\\Stock-Market-System\\frontend\\src\\actions\\auth.js",[],"C:\\Users\\Brijesh\\Documents\\GitHub\\Stock-Market-System\\frontend\\src\\components\\Datatable\\Datatable.js",["91","92","93","94","95","96","97","98","99","100"],"// import React from 'react';\r\n// import React from 'react';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import Table from '@material-ui/core/Table';\r\n// import TableBody from '@material-ui/core/TableBody';\r\n// import TableCell from '@material-ui/core/TableCell';\r\n// import TableContainer from '@material-ui/core/TableContainer';\r\n// import TableHead from '@material-ui/core/TableHead';\r\n// import TableRow from '@material-ui/core/TableRow';\r\n// import Paper from '@material-ui/core/Paper';\r\n\r\n// const useStyles = makeStyles({\r\n//   table: {\r\n//     minWidth: 650,\r\n//   },\r\n// });\r\n\r\n// const Datatable = ({ data }) => {\r\n//     // const columns = data[0] && Object.keys(data[0]);\r\n//     // export default function BasicTable() {\r\n//         const classes = useStyles();\r\n//     return (\r\n//         <TableContainer component={Paper}>\r\n//       <Table className={classes.table} aria-label=\"simple table\">\r\n//         <TableHead>\r\n//           <TableRow>\r\n//             <TableCell>Symbol</TableCell>\r\n//             <TableCell align=\"right\">Name</TableCell>\r\n//             {/* <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\r\n//             <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\r\n//             <TableCell align=\"right\">Protein&nbsp;(g)</TableCell> */}\r\n//           </TableRow>\r\n//         </TableHead>\r\n//         <TableBody>\r\n//           {data.map((row) => (\r\n//             <TableRow key={row.name}>\r\n//               <TableCell component=\"th\" scope=\"row\">\r\n//                 {row.symbol}\r\n//               </TableCell>\r\n//               {/* <TableCell align=\"right\">{row.symbol}</TableCell> */}\r\n//               <TableCell align=\"right\">{row.name}</TableCell>\r\n//               {/* <TableCell align=\"right\">{row.carbs}</TableCell>\r\n//               <TableCell align=\"right\">{row.protein}</TableCell> */}\r\n//             </TableRow>\r\n//           ))}\r\n//         </TableBody>\r\n//       </Table>\r\n//     </TableContainer>\r\n//   );\r\n// };\r\n\r\n/*\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\n// function createData(name, calories, fat, carbs, protein) {\r\n//   return { name, calories, fat, carbs, protein };\r\n// }\r\n\r\n\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'symbol', numeric: false, disablePadding: true, label: 'Symbol' },\r\n  { id: 'name', numeric: true, disablePadding: false, label: 'Name' },\r\n//   { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n//   { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n//   { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        { <TableCell padding=\"checkbox\"> }\r\n          \r\n        { </TableCell> }\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          Data\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nconst Datatable = ({data}) =>{\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = data.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={data.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(data, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      { <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell> }\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.symbol}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.name}</TableCell>\r\n                      { <TableCell align=\"right\">{row.fat}</TableCell>\r\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                      <TableCell align=\"right\">{row.protein}</TableCell> }\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={data.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// import React from 'react';\r\n// import PropTypes from 'prop-types';\r\n// import { makeStyles, useTheme } from '@material-ui/core/styles';\r\n// import Table from '@material-ui/core/Table';\r\n// import TableBody from '@material-ui/core/TableBody';\r\n// import TableCell from '@material-ui/core/TableCell';\r\n// import TableContainer from '@material-ui/core/TableContainer';\r\n// import TableFooter from '@material-ui/core/TableFooter';\r\n// import TablePagination from '@material-ui/core/TablePagination';\r\n// import TableRow from '@material-ui/core/TableRow';\r\n// import Paper from '@material-ui/core/Paper';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import FirstPageIcon from '@material-ui/icons/FirstPage';\r\n// import KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\n// import KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\n// import LastPageIcon from '@material-ui/icons/LastPage';\r\n\r\n// const useStyles1 = makeStyles((theme) => ({\r\n//   root: {\r\n//     flexShrink: 0,\r\n//     marginLeft: theme.spacing(2.5),\r\n//   },\r\n// }));\r\n\r\n// function TablePaginationActions(props) {\r\n//   const classes = useStyles1();\r\n//   const theme = useTheme();\r\n//   const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n//   const handleFirstPageButtonClick = (event) => {\r\n//     onChangePage(event, 0);\r\n//   };\r\n\r\n//   const handleBackButtonClick = (event) => {\r\n//     onChangePage(event, page - 1);\r\n//   };\r\n\r\n//   const handleNextButtonClick = (event) => {\r\n//     onChangePage(event, page + 1);\r\n//   };\r\n\r\n//   const handleLastPageButtonClick = (event) => {\r\n//     onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n//   };\r\n\r\n//   return (\r\n//     <div className={classes.root}>\r\n//       <IconButton\r\n//         onClick={handleFirstPageButtonClick}\r\n//         disabled={page === 0}\r\n//         aria-label=\"first page\"\r\n//       >\r\n//         {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n//       </IconButton>\r\n//       <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n//         {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n//       </IconButton>\r\n//       <IconButton\r\n//         onClick={handleNextButtonClick}\r\n//         disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n//         aria-label=\"next page\"\r\n//       >\r\n//         {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n//       </IconButton>\r\n//       <IconButton\r\n//         onClick={handleLastPageButtonClick}\r\n//         disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n//         aria-label=\"last page\"\r\n//       >\r\n//         {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n//       </IconButton>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// TablePaginationActions.propTypes = {\r\n//   count: PropTypes.number.isRequired,\r\n//   onChangePage: PropTypes.func.isRequired,\r\n//   page: PropTypes.number.isRequired,\r\n//   rowsPerPage: PropTypes.number.isRequired,\r\n// };\r\n\r\n// function createData(name, calories, fat) {\r\n//   return { name, calories, fat };\r\n// }\r\n\r\n// const rows = [\r\n//   createData('Cupcake', 305, 3.7),\r\n//   createData('Donut', 452, 25.0),\r\n//   createData('Eclair', 262, 16.0),\r\n//   createData('Frozen yoghurt', 159, 6.0),\r\n//   createData('Gingerbread', 356, 16.0),\r\n//   createData('Honeycomb', 408, 3.2),\r\n//   createData('Ice cream sandwich', 237, 9.0),\r\n//   createData('Jelly Bean', 375, 0.0),\r\n//   createData('KitKat', 518, 26.0),\r\n//   createData('Lollipop', 392, 0.2),\r\n//   createData('Marshmallow', 318, 0),\r\n//   createData('Nougat', 360, 19.0),\r\n//   createData('Oreo', 437, 18.0),\r\n// ].sort((a, b) => (a.calories < b.calories ? -1 : 1));\r\n\r\n// const useStyles2 = makeStyles({\r\n//   table: {\r\n//     minWidth: 500,\r\n//   },\r\n// });\r\n\r\n// export default function CustomPaginationActionsTable() {\r\n//   const classes = useStyles2();\r\n//   const [page, setPage] = React.useState(0);\r\n//   const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n//   const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n//   const handleChangePage = (event, newPage) => {\r\n//     setPage(newPage);\r\n//   };\r\n\r\n//   const handleChangeRowsPerPage = (event) => {\r\n//     setRowsPerPage(parseInt(event.target.value, 10));\r\n//     setPage(0);\r\n//   };\r\n\r\n//   return (\r\n//     <TableContainer component={Paper}>\r\n//       <Table className={classes.table} aria-label=\"custom pagination table\">\r\n//         <TableBody>\r\n//           {(rowsPerPage > 0\r\n//             ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n//             : rows\r\n//           ).map((row) => (\r\n//             <TableRow key={row.name}>\r\n//               <TableCell component=\"th\" scope=\"row\">\r\n//                 {row.name}\r\n//               </TableCell>\r\n//               <TableCell style={{ width: 160 }} align=\"right\">\r\n//                 {row.calories}\r\n//               </TableCell>\r\n//               <TableCell style={{ width: 160 }} align=\"right\">\r\n//                 {row.fat}\r\n//               </TableCell>\r\n//             </TableRow>\r\n//           ))}\r\n\r\n//           {emptyRows > 0 && (\r\n//             <TableRow style={{ height: 53 * emptyRows }}>\r\n//               <TableCell colSpan={6} />\r\n//             </TableRow>\r\n//           )}\r\n//         </TableBody>\r\n//         <TableFooter>\r\n//           <TableRow>\r\n//             <TablePagination\r\n//               rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n//               colSpan={3}\r\n//               count={rows.length}\r\n//               rowsPerPage={rowsPerPage}\r\n//               page={page}\r\n//               SelectProps={{\r\n//                 inputProps: { 'aria-label': 'rows per page' },\r\n//                 native: true,\r\n//               }}\r\n//               onChangePage={handleChangePage}\r\n//               onChangeRowsPerPage={handleChangeRowsPerPage}\r\n//               ActionsComponent={TablePaginationActions}\r\n//             />\r\n//           </TableRow>\r\n//         </TableFooter>\r\n//       </Table>\r\n//     </TableContainer>\r\n//   );\r\n// }\r\n*/\r\n\r\n\r\n\r\n\r\nimport React from 'react';\r\nimport { AppBar, Typography, Toolbar, Avatar, Button, CardMedia } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { spacing } from '@material-ui/system';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nimport * as api from '../../api/index.js';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 8,\r\n  },\r\n  button: {\r\n    marginRight: 3,\r\n    align: `right`,\r\n  },\r\n  avatar: {\r\n    backgroundColor: 'red',\r\n  },\r\n});\r\n\r\n\r\n\r\nexport default function Datatable({ data }) {\r\n  //const columns = data[0] && Object.keys(data[0]);\r\n  const classes = useStyles();\r\n  //const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  async function handleClick(symbol, e) {\r\n    e.preventDefault();\r\n    try {\r\n      const { data } = await api.updateWatchlist({ symbol });\r\n      //console.log(data);\r\n      //getList();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    // <table cellPadding={0} cellSpacing={0}>\r\n    //   <thead>\r\n    //     <tr>{data[0] && columns.map((heading) => <th>{heading}</th>)}</tr>\r\n    //   </thead>\r\n    //   <tbody>\r\n    //     {data.map(row => <tr>\r\n    //       {\r\n    //         columns.map(column => <td>{row[column]}</td>)\r\n\r\n    //       }\r\n    //     </tr>)\r\n\r\n    //     }\r\n    //     <Toolbar>\r\n    //             Hi\r\n    //         </Toolbar>\r\n    //   </tbody>\r\n    // </table>\r\n    data.map(row =>\r\n      <Box mb={1}>\r\n        <Card className={classes.root} variant=\"outlined\">\r\n          <CardHeader\r\n            avatar={\r\n              <Typography>\r\n                {row.symbol}\r\n              </Typography>\r\n            }\r\n            action={\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                className={classes.button}\r\n                startIcon={<DeleteIcon />}\r\n                onClick={(e) => handleClick(row.symbol, e)}\r\n              >\r\n                Delete\r\n      </Button>\r\n            }\r\n          />\r\n          <CardContent>\r\n            <Typography variant=\"h6\" component=\"h6\">\r\n              {row.name}\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n      </Box>\r\n    )\r\n\r\n  )\r\n}\r\n",["101","102"],"C:\\Users\\Brijesh\\Documents\\GitHub\\Stock-Market-System\\frontend\\src\\components\\View\\View.js",["103","104","105","106","107","108","109","110","111"],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":151,"column":17,"nodeType":"118","messageId":"119","endLine":151,"endColumn":25},{"ruleId":"116","severity":1,"message":"120","line":151,"column":27,"nodeType":"118","messageId":"119","endLine":151,"endColumn":36},{"ruleId":"121","severity":1,"message":"122","line":36,"column":8,"nodeType":"123","endLine":36,"endColumn":18,"suggestions":"124"},{"ruleId":"116","severity":1,"message":"125","line":13,"column":8,"nodeType":"118","messageId":"119","endLine":13,"endColumn":14},{"ruleId":"116","severity":1,"message":"126","line":14,"column":24,"nodeType":"118","messageId":"119","endLine":14,"endColumn":36},{"ruleId":"116","severity":1,"message":"127","line":17,"column":7,"nodeType":"118","messageId":"119","endLine":17,"endColumn":18},{"ruleId":"116","severity":1,"message":"128","line":26,"column":12,"nodeType":"118","messageId":"119","endLine":26,"endColumn":18},{"ruleId":"116","severity":1,"message":"129","line":29,"column":9,"nodeType":"118","messageId":"119","endLine":29,"endColumn":14},{"ruleId":"116","severity":1,"message":"130","line":53,"column":21,"nodeType":"118","messageId":"119","endLine":53,"endColumn":25},{"ruleId":"121","severity":1,"message":"131","line":108,"column":32,"nodeType":"132","endLine":110,"endColumn":29},{"ruleId":"133","severity":1,"message":"134","line":123,"column":25,"nodeType":"135","messageId":"136","endLine":123,"endColumn":27},{"ruleId":"116","severity":1,"message":"130","line":158,"column":21,"nodeType":"118","messageId":"119","endLine":158,"endColumn":25},{"ruleId":"133","severity":1,"message":"134","line":163,"column":25,"nodeType":"135","messageId":"136","endLine":163,"endColumn":27},{"ruleId":"116","severity":1,"message":"137","line":572,"column":10,"nodeType":"118","messageId":"119","endLine":572,"endColumn":16},{"ruleId":"116","severity":1,"message":"138","line":572,"column":30,"nodeType":"118","messageId":"119","endLine":572,"endColumn":37},{"ruleId":"116","severity":1,"message":"139","line":572,"column":39,"nodeType":"118","messageId":"119","endLine":572,"endColumn":45},{"ruleId":"116","severity":1,"message":"140","line":572,"column":55,"nodeType":"118","messageId":"119","endLine":572,"endColumn":64},{"ruleId":"116","severity":1,"message":"141","line":575,"column":8,"nodeType":"118","messageId":"119","endLine":575,"endColumn":19},{"ruleId":"116","severity":1,"message":"142","line":577,"column":10,"nodeType":"118","messageId":"119","endLine":577,"endColumn":17},{"ruleId":"116","severity":1,"message":"143","line":580,"column":8,"nodeType":"118","messageId":"119","endLine":580,"endColumn":20},{"ruleId":"116","severity":1,"message":"144","line":581,"column":8,"nodeType":"118","messageId":"119","endLine":581,"endColumn":18},{"ruleId":"116","severity":1,"message":"145","line":583,"column":10,"nodeType":"118","messageId":"119","endLine":583,"endColumn":18},{"ruleId":"116","severity":1,"message":"130","line":622,"column":15,"nodeType":"118","messageId":"119","endLine":622,"endColumn":19},{"ruleId":"112","replacedBy":"146"},{"ruleId":"114","replacedBy":"147"},{"ruleId":"116","severity":1,"message":"148","line":2,"column":10,"nodeType":"118","messageId":"119","endLine":2,"endColumn":20},{"ruleId":"116","severity":1,"message":"126","line":4,"column":24,"nodeType":"118","messageId":"119","endLine":4,"endColumn":36},{"ruleId":"116","severity":1,"message":"149","line":8,"column":8,"nodeType":"118","messageId":"119","endLine":8,"endColumn":14},{"ruleId":"116","severity":1,"message":"127","line":11,"column":7,"nodeType":"118","messageId":"119","endLine":11,"endColumn":18},{"ruleId":"116","severity":1,"message":"150","line":23,"column":9,"nodeType":"118","messageId":"119","endLine":23,"endColumn":17},{"ruleId":"116","severity":1,"message":"151","line":24,"column":9,"nodeType":"118","messageId":"119","endLine":24,"endColumn":16},{"ruleId":"116","severity":1,"message":"152","line":26,"column":11,"nodeType":"118","messageId":"119","endLine":26,"endColumn":17},{"ruleId":"121","severity":1,"message":"153","line":65,"column":8,"nodeType":"123","endLine":65,"endColumn":10,"suggestions":"154"},{"ruleId":"116","severity":1,"message":"155","line":91,"column":11,"nodeType":"118","messageId":"119","endLine":91,"endColumn":18},"no-native-reassign",["156"],"no-negated-in-lhs",["157"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'logout' and 'user?.token'. Either include them or remove the dependency array.","ArrayExpression",["158"],"'Alpaca' is defined but never used.","'AlpacaStream' is defined but never used.","'USE_POLYGON' is assigned a value but never used.","'option' is assigned a value but never used.","'data2' is assigned a value but never used.","'data' is assigned a value but never used.","Assignments to the 'interval' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'Avatar' is defined but never used.","'CardMedia' is defined but never used.","'CardActions' is defined but never used.","'spacing' is defined but never used.","'MoreVertIcon' is defined but never used.","'IconButton' is defined but never used.","'useTheme' is defined but never used.",["156"],["157"],"'Typography' is defined but never used.","'moment' is defined but never used.","'location' is assigned a value but never used.","'history' is assigned a value but never used.","'client' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'params.symbol'. Either include it or remove the dependency array.",["159"],"'classes' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},"Update the dependencies array to be: [location, logout, user?.token]",{"range":"164","text":"165"},"Update the dependencies array to be: [params.symbol]",{"range":"166","text":"167"},[1106,1116],"[location, logout, user?.token]",[2274,2276],"[params.symbol]"]